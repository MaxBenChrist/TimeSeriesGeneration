# Autogenerated with SMOP 0.32-7-gcce8558
from smop.core import *
# MkSg_SelfAffine.m

    
@function
def MkSg_SelfAffine(N=None,alpha=None,generateHow=None,*args,**kwargs):
    varargin = MkSg_SelfAffine.varargin
    nargin = MkSg_SelfAffine.nargin

    # Generates a self-affine time series
#-------------------------------------------------------------------------------
    
    if nargin < 1:
        N=5000
    
    if nargin < 2:
        alpha=0.5
    
    if nargin < 3:
        generateHow='powernoise'
    
    #-------------------------------------------------------------------------------
    
    if 'powernoise' == generateHow:
        s=F_powernoise(alpha,N)
    else:
        if 'rmpnoise' == generateHow:
            # I think you need to alter to input the Hurst exponent, H:
            H=dot(0.5,(alpha + 1))
            s=F_rmpnoise(H,N)
    
    #===============================================================================
# N = 5000;
# alphar = (-1:0.02:4);
# for i = 1:length(alphar)
#     x = powernoise(alphar(i), N); # deterministic powerlaw-correlated noise
#     plot(x(1:500),'.-k');
#     title(alphar(i),'interpreter','none')
#     disp(alphar(i))
#     Y = abs(fft(x)).^2;
#     Y = Y(1:end/2);
#     p = polyfit(log(1:length(Y))',log(Y),1);
#     disp(p(1));
# end
#===============================================================================
    
    return s
    
if __name__ == '__main__':
    pass
    